{"version":3,"sources":["auth/actions.js","auth/actionTypes.js","auth/constants.js","utils/otherUtil.js","components/Navbar.js","components/Footer.js","components/FullScreenLoadingSpinner.js","auth/views/PrivateRoute.js","components/SendRequestBtn.js","auth/views/Login.js","auth/defaultState.js","auth/index.js","now/actions.js","now/actionTypes.js","components/Header.js","components/SectionTitle.js","now/views/SelectMoodBtn.js","now/views/Now.js","now/defaultState.js","past/userRecord/actions.js","past/userRecord/actionTypes.js","past/userRecord/views/UserRecordItem.js","components/BlockLoadingSpinner.js","past/userRecord/views/UserRecord.js","past/moodData/actions.js","past/moodData/actionTypes.js","components/DatePicker.js","components/DateRangePicker.js","components/PieChart.js","past/moodData/views/MoodData.js","past/moodCard/actions.js","past/moodCard/actionTypes.js","past/moodCard/views/Card.js","components/NullContent.js","past/moodCard/views/MoodCard.js","past/views/Past.js","future/views/Future.js","App.js","serviceWorker.js","Store.js","auth/reducer.js","now/reducer.js","past/moodData/reducer.js","past/moodCard/reducer.js","past/userRecord/reducer.js","past/moodData/defaultState.js","past/moodCard/defaultState.js","index.js"],"names":["authByJWT","dispatch","authByJWTFetchStarted","axios","get","headers","Authorization","localStorage","getItem","then","res","authByJWTFetchSuccess","catch","err","authByJWTFetchFailure","type","result","error","authByUserInfo","username","password","authByUserInfoFetchStarted","post","setItem","data","token","authByUserInfoFetchSuccess","authByUserInfoFetchFailure","toggleAuthMode","submitRegisterUserInfo","submitRegisterUserInfoFetchStarted","submitRegisterUserInfoFetchSuccess","code","usernameExistedFailure","submitRegisterUserInfoFetchFailure","authMode","LOGIN","REGISTER","fetchStatus","getSendRequestBtnStatus","status","undefined","getDateRangeText","startDate","endDate","year","month","day","concat","Navbar","react_default","a","createElement","className","data-toggle","data-target","react_router_dom","to","this","props","React","Component","connect","state","userInfo","Footer","text","FullScreenLoadingSpinner","style","width","height","paddingTop","textAlign","role","aria-hidden","authStatus","_ref","component","Object","objectWithoutProperties","privatePage","components_Navbar","components_Footer","react_router","assign","render","p","pathname","from","location","components_FullScreenLoadingSpinner","loadingSpinner","Fragment","SendRequestBtn","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","content","nextProps","_this2","nowStatus","nextStatus","setState","successText","timer1","setTimeout","failureText","timer2","clearTimeout","opacity","onClick","clickHandle","disabled","Login","loginHandle","refs","value","display","alignItems","justifyContent","position","borderRadius","maxLength","required","ref","id","onChange","bind","htmlFor","components_SendRequestBtn","bindActionCreators","defaultState","view","PrivateRoute","initMood","defaultMoodNames","selectMoodBtnClicked","btnIndex","addMoodBtn","moodName","submitMoodContent","selectMoods","moodDescription","submitMoodContentUrl","submitMoodContentFetchStarted","moodNames","submitMoodContentFetchSuccess","submitMoodContentFetchFailure","Header","title","lead","SectionTitle","borderBottom","SelectMoodBtn","marginLeft","right","isSelected","Now","getCustomizeMoodNameAndAddMoodBtn","customizeMood","customizeMoodName","trim","indexOf","getMoodDescriptionAndSubmitMoodContent","filter","name","index","moodSelections","length","components_Header","components_SectionTitle","map","views_SelectMoodBtn","key","placeholder","rows","submitMoodContentStatus","nowMoodContent","initialMoodContent","usedMoodNames","getUserRecord","getUserRecordUrl","getUserRecordFetchStarted","getUserRecordFetchSuccess","getUserRecordFetchFailure","UserRecordItem","overflow","dir","animation","delay","BlockLoadingSpinner","UserRecord","titles","today","Date","registerDate","useDays","Math","round","texts","totalMoodNum","totalMoodNameNum","mostMoodName","join","views_UserRecordItem","components_BlockLoadingSpinner","userRecord","toggleSettings","submitSettings","submitSettingsUrl","submitSettingsStarted","params","start","end","submitSettingsSuccess","submitSettingsFailure","moodDateRangeText","DatePicker","isLeapYear","computeDayNum","isCurMonth","now","getFullYear","date","getMonth","setInputRange","_this$refs","yearInput","monthInput","dayInput","maxDay","max","objectSpread","dateChanged","getDate","dateChangedHandle","e","target","change","newDate","defaultDate","_this$state$date","border","min","DateRangePicker","setStartDate","dateRange","setEndDate","defaultStartDate","defaultEndDate","DatePicker_DatePicker","PieChart","pie","setOption","series","radius","roseType","itemStyle","normal","label","show","formatter","echarts","init","document","getElementById","showLoading","isLoading","hideLoading","MoodData","submitSettingsHandle","_this$refs$dateRange$","href","toggleBtnText","DateRangePicker_DateRangePicker","submitSettingsStatus","moodNum","lineHeight","PieChart_PieChart","moodData","initMoodSelections","selectedMoods","selectedmoods","changeMoodSelections","Card","addAnimation","card","getBoundingClientRect","top","windowHeight","classList","contains","remove","add","getElementsByClassName","window","innerHeight","addEventListener","removeEventListener","transform","mood","item","marginBottom","substring","NullContent","MoodCard","getDefaultDate","date1","date2","setDate","fiveDaysAgo","confirmFilter","selection","_this$refs$dateRange$2","_this$getDefaultDate","defaultChecked","components_NullContent","moods","views_Card","moodCard","toConsumableArray","Set","Past","views_UserRecord","views_MoodData","views_MoodCard","Future","Auth","authActions","App","history","push","App_PrivateRoute","exact","path","withRouter","Boolean","hostname","match","reducer","combineReducers","arguments","action","moodSelection","getUserRecordStatus","initialState","initialUserInfo","middlewares","thunkMiddleware","storeEnhancers","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","ReactDOM","es","store","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02387bff.chunk.js","sourcesContent":["import {\r\n  AUTH_BY_JWT_FETCH_STARTED,\r\n  AUTH_BY_JWT_FETCH_SUCCESS,\r\n  AUTH_BY_JWT_FETCH_FAILURE,\r\n  AUTH_BY_USERINFO_FETCH_STARTED,\r\n  AUTH_BY_USERINFO_FETCH_SUCCESS,\r\n  AUTH_BY_USERINFO_FETCH_FAILURE,\r\n  TOGGLE_AUTH_MODE,\r\n  SUBMIT_REGISTER_USERINFO_FETCH_STARTED,\r\n  SUBMIT_REGISTER_USERINFO_FETCH_SUCCESS,\r\n  SUBMIT_REGISTER_USERINFO_FETCH_FAILURE,\r\n  USERNAME_EXISTED_FAILURE\r\n} from './actionTypes';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const authByJWT = () => {\r\n  return (dispatch) => {\r\n    const authByJWTUrl = '/api/users/auth';\r\n\r\n    dispatch(authByJWTFetchStarted());\r\n\r\n    axios.get(authByJWTUrl, {\r\n      \"headers\": {\r\n        'Authorization': 'jwt ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n    .then(res => {\r\n      dispatch(authByJWTFetchSuccess(res));\r\n    })\r\n    .catch(err => {\r\n      dispatch(authByJWTFetchFailure(err));\r\n    });\r\n  }\r\n};\r\n\r\nexport const authByJWTFetchStarted = () => ({\r\n  type: AUTH_BY_JWT_FETCH_STARTED\r\n});\r\n\r\nexport const authByJWTFetchSuccess = (result) => ({\r\n  type: AUTH_BY_JWT_FETCH_SUCCESS,\r\n  result\r\n});\r\n\r\nexport const authByJWTFetchFailure = (error) => ({\r\n  type: AUTH_BY_JWT_FETCH_FAILURE,\r\n  error\r\n});\r\n\r\n\r\nexport const authByUserInfo = (username, password) => {\r\n  return (dispatch) => {\r\n    const authByUserInfoUrl = '/api/users/login';\r\n\r\n    dispatch(authByUserInfoFetchStarted());\r\n\r\n    axios.post(authByUserInfoUrl, {\r\n      username,\r\n      password\r\n    })\r\n    .then(res => {\r\n      localStorage.setItem('token', res.data.token);\r\n      dispatch(authByUserInfoFetchSuccess(res));\r\n    })\r\n    .catch(err => {\r\n      dispatch(authByUserInfoFetchFailure(err));\r\n    });\r\n  }\r\n};\r\n\r\nexport const authByUserInfoFetchStarted = () => ({\r\n  type: AUTH_BY_USERINFO_FETCH_STARTED\r\n});\r\n\r\nexport const authByUserInfoFetchSuccess = (result) => ({\r\n  type: AUTH_BY_USERINFO_FETCH_SUCCESS,\r\n  result\r\n});\r\n\r\nexport const authByUserInfoFetchFailure = (error) => ({\r\n  type: AUTH_BY_USERINFO_FETCH_FAILURE,\r\n  error\r\n});\r\n\r\n\r\nexport const toggleAuthMode = () => ({\r\n  type: TOGGLE_AUTH_MODE\r\n});\r\n\r\n\r\nexport const submitRegisterUserInfo = (username, password) => {\r\n  return (dispatch) => {\r\n    const submitRegisterUserInfoUrl = '/api/users';\r\n\r\n    dispatch(submitRegisterUserInfoFetchStarted());\r\n\r\n    axios.post(submitRegisterUserInfoUrl, {\r\n      username,\r\n      password\r\n    })\r\n    .then(res => {\r\n      localStorage.setItem('token', res.data.token);\r\n      dispatch(submitRegisterUserInfoFetchSuccess(res));\r\n    })\r\n    .catch(err => {\r\n      if(err.code === 409) {\r\n        dispatch(usernameExistedFailure());\r\n      } else {\r\n        dispatch(submitRegisterUserInfoFetchFailure(err));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const submitRegisterUserInfoFetchStarted = () => ({\r\n  type: SUBMIT_REGISTER_USERINFO_FETCH_STARTED\r\n});\r\n\r\nexport const submitRegisterUserInfoFetchSuccess = (result) => ({\r\n  type: SUBMIT_REGISTER_USERINFO_FETCH_SUCCESS,\r\n  result\r\n});\r\n\r\nexport const submitRegisterUserInfoFetchFailure = (error) => ({\r\n  type: SUBMIT_REGISTER_USERINFO_FETCH_FAILURE,\r\n  error\r\n});\r\n\r\nexport const usernameExistedFailure = () => ({\r\n  type: USERNAME_EXISTED_FAILURE\r\n});","export const AUTH_BY_JWT = 'auth/auth_by_jwt';\r\nexport const AUTH_BY_JWT_FETCH_STARTED = 'auth/auth_by_jwt_fetch_started';\r\nexport const AUTH_BY_JWT_FETCH_SUCCESS = 'auth/auth_by_jwt_fetch_success';\r\nexport const AUTH_BY_JWT_FETCH_FAILURE = 'auth/auth_by_jwt_fetch_failure';\r\n\r\nexport const AUTH_BY_USERINFO = 'auth/auth_by_userinfo';\r\nexport const AUTH_BY_USERINFO_FETCH_STARTED = 'auth/auth_by_userinfo_fetch_started';\r\nexport const AUTH_BY_USERINFO_FETCH_SUCCESS = 'auth/auth_by_userinfo_fetch_success';\r\nexport const AUTH_BY_USERINFO_FETCH_FAILURE = 'auth/auth_by_userinfo_fetch_failure';\r\n\r\nexport const TOGGLE_AUTH_MODE = 'auth/toggle_auth_mode';\r\nexport const SUBMIT_REGISTER_USERINFO = 'auth/submit_register_userinfo';\r\nexport const SUBMIT_REGISTER_USERINFO_FETCH_STARTED = 'auth/submit_register_userinfo_fetch_started';\r\nexport const SUBMIT_REGISTER_USERINFO_FETCH_SUCCESS = 'auth/submit_register_userinfo_fetch_success';\r\nexport const SUBMIT_REGISTER_USERINFO_FETCH_FAILURE = 'auth/submit_register_userinfo_fetch_failure';\r\nexport const USERNAME_EXISTED_FAILURE = 'auth/username_existed_failure';","export const authMode = {\r\n  LOGIN: 'login',\r\n  REGISTER: 'register'\r\n};","export const fetchStatus = {\r\n  LOADING: 'loading',\r\n  SUCCESS: 'success',\r\n  FAILURE: 'failure',\r\n  CONFLICT_FAILURE: 'conflict_failure'\r\n};\r\n\r\nexport const getSendRequestBtnStatus = (status) => {\r\n  if(status === undefined) {\r\n    return 'none';\r\n  } else if (status === fetchStatus.LOADING) {\r\n    return 'loading';\r\n  } else if (status === fetchStatus.SUCCESS) {\r\n    return 'success';\r\n  } else if (status === fetchStatus.FAILURE) {\r\n    return 'failure';\r\n  } else {\r\n    return 'failure';\r\n  }\r\n}\r\n\r\nexport const getDateRangeText = (startDate, endDate) => {\r\n  if(startDate.year === endDate.year && startDate.month === endDate.month && startDate.day === endDate.day) {\r\n    return `${startDate.year}.${startDate.month}.${startDate.day}`;\r\n  }\r\n  return `${startDate.year}.${startDate.month}.${startDate.day} ~ ${endDate.year}.${endDate.month}.${endDate.day}`;\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger\">\r\n        <span className=\"navbar-brand\">\r\n          Mood\r\n        </span>\r\n        <span className=\"navbar-text\">你的喜怒哀乐。</span>\r\n\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".collapsibleNavbar\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse collapsibleNavbar justify-content-end\"> \r\n          <ul className=\"navbar-nav pr-3\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/past\">过去</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to='/now'>现在</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/future\">未来</Link>\r\n            </li>\r\n          </ul>\r\n          <span className=\"navbar-text\">{ this.props.username }</span>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.userInfo.username\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Navbar);","import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <section className=\"p-5 mt-3 bg-danger\">\r\n      <div className=\"container\">\r\n        <div className=\"lead text-center text-light\">{ props.text }</div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst FullScreenLoadingSpinner = (props) => {\r\n  return (\r\n    <div style={{\r\n      width: '100%',\r\n      height: '100vh',\r\n      paddingTop: '30vh'\r\n    }}>\r\n      <div style={{\r\n        width: '100%',\r\n        height: '30vh',\r\n        textAlign: 'center'\r\n      }}>\r\n        <span \r\n          className=\"spinner-grow text-danger\" \r\n          role=\"status\" \r\n          aria-hidden=\"true\"\r\n          style={{\r\n            width: '10em',\r\n            height: '10em'\r\n          }}>\r\n        </span>\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n      <div className=\"lead text-center text-danger\">Loading...</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FullScreenLoadingSpinner;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchStatus } from '../../utils/otherUtil';\r\n\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport FullScreenLoadingSpinner from '../../components/FullScreenLoadingSpinner';\r\n\r\nimport './privateRoute.css';\r\n\r\nconst PrivateRoute = ({component: Component, ...props}) => {\r\n  const privatePage = (\r\n    <div className=\"private-route\">\r\n      <Navbar />\r\n      <Component />\r\n      <Footer text=\"Developed By Zhang\" />\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Route {...props} render={(p) => {\r\n      if(props.authStatus === fetchStatus.SUCCESS) {\r\n        return privatePage;\r\n      } else if (props.authStatus === fetchStatus.FAILURE) {\r\n        return <Redirect to={{\r\n          pathname: '/login',\r\n          state: {\r\n            from: p.location.pathname\r\n          }\r\n        }} />\r\n      } else {\r\n        return <FullScreenLoadingSpinner />;\r\n      }\r\n    }} />\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authStatus: state.userInfo.authStatus\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(PrivateRoute);","import React from 'react';\r\n\r\nconst loadingSpinner = \r\n<React.Fragment>\r\n  <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n  <span className=\"sr-only\">Loading...</span>\r\n</React.Fragment>;\r\n\r\nclass SendRequestBtn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: this.props.text\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const nowStatus = this.props.status;\r\n    const nextStatus = nextProps.status;\r\n\r\n    if(nextStatus === 'loading') {\r\n      this.setState({ content: loadingSpinner });\r\n    } else if (nowStatus === 'loading') {\r\n      if(nextStatus === 'success') {\r\n        this.setState({ content: this.props.successText }, () => {\r\n          this.timer1 = setTimeout(() => {\r\n            this.setState({ content: this.props.text });\r\n          }, 1000);\r\n        });\r\n      } else if (nextStatus === 'failure') {\r\n        this.setState({ content: this.props.failureText }, () => {\r\n          this.timer2 = setTimeout(() => {\r\n            this.setState({ content: this.props.text });\r\n          }, 1000);\r\n        });\r\n      }\r\n    }\r\n\r\n    if(nextProps.text !== this.props.text) {\r\n      this.setState({ content: nextProps.text });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer1);\r\n    clearTimeout(this.timer2);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"text-danger mt-3\" style={{\r\n          opacity: this.state.content === this.props.text ? 0 : 1\r\n        }}>\r\n          { this.state.content }\r\n        </div>\r\n        <button\r\n          className={`${this.props.className} mt-2`}\r\n          onClick={this.props.clickHandle}\r\n          disabled={this.props.status === 'loading'}\r\n        >\r\n          {\r\n            this.props.text\r\n          }\r\n        </button>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SendRequestBtn;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { authByUserInfo, submitRegisterUserInfo, toggleAuthMode } from '../actions';\r\nimport { authMode } from '../constants';\r\nimport { fetchStatus, getSendRequestBtnStatus } from '../../utils/otherUtil';\r\n\r\nimport SendRequestBtn from '../../components/SendRequestBtn';\r\n\r\nclass Login extends React.Component {\r\n  loginHandle = () => {\r\n    const username = this.refs.username.value;\r\n    const password = this.refs.password.value;\r\n\r\n    if(username === '' || password === '') {\r\n      return;\r\n    }\r\n    \r\n    if(this.props.authMode === authMode.LOGIN) {\r\n      this.props.authByUserInfo(username, password);\r\n    } else {\r\n      this.props.submitRegisterUserInfo(username, password);\r\n    }\r\n    \r\n  }\r\n\r\n  render() {  \r\n    if(this.props.authStatus === fetchStatus.SUCCESS) {\r\n      let to = {\r\n        pathname: (this.props.location.state && this.props.location.state.from.pathname) || '/now',\r\n        state: {\r\n          from: '/login'\r\n        }\r\n      };\r\n\r\n      return <Redirect to={to} />\r\n    }\r\n\r\n    return (\r\n      <div className=\"bg-danger\" style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        position: 'absolute',\r\n        height: '100%',\r\n        width: '100%'\r\n      }}>\r\n        <div className=\"container px-5 py-5 mx-4 bg-white\" style={{\r\n          borderRadius: '1rem'\r\n        }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-6 offset-sm-3 col-md-4 offset-md-4\">\r\n              <div className=\"text-center mb-5 display-4 text-danger\">Mood</div>\r\n              <label>用户名</label>\r\n              <input\r\n                type=\"text\" \r\n                maxLength={10}\r\n                required=\"required\"\r\n                className=\"form-control mb-2\" \r\n                ref=\"username\"\r\n              />\r\n              <label>密码</label>\r\n              <input\r\n                type=\"password\" \r\n                maxLength={16}\r\n                required=\"required\"\r\n                className=\"form-control\" \r\n                ref=\"password\"\r\n              />\r\n\r\n              <center>\r\n                <div className=\"custom-control custom-switch mt-3\">\r\n                  <input \r\n                    type=\"checkbox\" \r\n                    className=\"custom-control-input\" \r\n                    id=\"toggle-auth-mode\" \r\n                    ref=\"toggleAuthMode\"\r\n                    onChange={this.props.toggleAuthMode.bind(this)} />\r\n                  <label className=\"custom-control-label\" htmlFor=\"toggle-auth-mode\">\r\n                    { this.props.authMode === authMode.LOGIN ? '点击切换注册' : '点击切换登录' }\r\n                  </label>\r\n                </div>\r\n              </center>\r\n\r\n              <center>\r\n                <SendRequestBtn\r\n                  className=\"btn bg-danger text-light mt-3\"\r\n                  clickHandle={this.loginHandle.bind(this)}\r\n                  status={getSendRequestBtnStatus(this.props.authStatus)}\r\n                  text={this.props.authMode === authMode.LOGIN ? '登录' : '注册'}\r\n                  successText={this.props.authMode === authMode.LOGIN ? '登录成功' : '注册成功'}\r\n                  failureText={this.props.authMode === authMode.LOGIN \r\n                               ? '登录失败，请重试' \r\n                               : (this.props.authStatus === fetchStatus.FAILURE\r\n                                  ? '注册失败，请重试'\r\n                                  : '用户名已存在！')}\r\n                />\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authStatus: state.userInfo.authStatus,\r\n    authMode: state.userInfo.authMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  authByUserInfo,\r\n  submitRegisterUserInfo,\r\n  toggleAuthMode\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import { authMode } from './constants';\r\n\r\nexport default {\r\n  authMode: authMode.LOGIN\r\n};","import * as actions from './actions';\r\nimport reducer from './reducer';\r\nimport PrivateRoute from './views/PrivateRoute';\r\nimport Login from './views/Login';\r\nimport defaultState from './defaultState';\r\n\r\nconst view = { PrivateRoute, Login };\r\nexport { \r\n  actions, \r\n  reducer, \r\n  view,\r\n  defaultState\r\n};","import {\r\n  INIT_MOOD_SELECTIONS,\r\n  SELECT_MOOD_BTN_CLICKED,\r\n  ADD_MOOD_BTN,\r\n  SUBMIT_MOOD_CONTENT_FETCH_STARTED,\r\n  SUBMIT_MOOD_CONTENT_FETCH_SUCCESS,\r\n  SUBMIT_MOOD_CONTENT_FETCH_FAILURE\r\n} from './actionTypes';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const initMood = (defaultMoodNames) => ({\r\n  type: INIT_MOOD_SELECTIONS,\r\n  defaultMoodNames\r\n});\r\n\r\nexport const selectMoodBtnClicked = (btnIndex) => ({\r\n  type: SELECT_MOOD_BTN_CLICKED,\r\n  btnIndex\r\n});\r\n\r\nexport const addMoodBtn = (moodName) => ({\r\n  type: ADD_MOOD_BTN,\r\n  moodName\r\n});\r\n\r\nexport const submitMoodContent = (username, selectMoods, moodDescription) => {\r\n  return (dispatch) => {\r\n    const submitMoodContentUrl = `/api/users/${username}/moods`;\r\n\r\n    dispatch(submitMoodContentFetchStarted());\r\n\r\n    axios.post(submitMoodContentUrl, {\r\n      moodNames: selectMoods,\r\n      moodDescription: moodDescription.value\r\n    }, {\r\n      headers: {\r\n        'Authorization': 'jwt ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n    .then(res => {\r\n      moodDescription.value = '';\r\n      dispatch(submitMoodContentFetchSuccess(res, selectMoods));\r\n    })\r\n    .catch(err => {\r\n      dispatch(submitMoodContentFetchFailure(err));\r\n    })\r\n  }\r\n};\r\n\r\nexport const submitMoodContentFetchStarted = () => ({\r\n  type: SUBMIT_MOOD_CONTENT_FETCH_STARTED\r\n});\r\n\r\nexport const submitMoodContentFetchSuccess = (result, selectMoods) => ({\r\n  type: SUBMIT_MOOD_CONTENT_FETCH_SUCCESS,\r\n  result,\r\n  selectMoods\r\n});\r\n\r\nexport const submitMoodContentFetchFailure = (error) => ({\r\n  type: SUBMIT_MOOD_CONTENT_FETCH_FAILURE,\r\n  error\r\n});\r\n","export const INIT_MOOD_SELECTIONS = 'now/init_mood_selections';\r\nexport const SELECT_MOOD_BTN_CLICKED = 'now/select_mood_btn_clicked';\r\nexport const ADD_MOOD_BTN = 'now/add_mood_btn';\r\nexport const SUBMIT_MOOD_CONTENT = 'now/submit_mood_content';\r\nexport const SUBMIT_MOOD_CONTENT_FETCH_STARTED = 'now/submit_mood_content_fetch_started';\r\nexport const SUBMIT_MOOD_CONTENT_FETCH_SUCCESS = 'now/submit_mood_content_fetch_success';\r\nexport const SUBMIT_MOOD_CONTENT_FETCH_FAILURE = 'now/submit_mood_content_fetch_failure';","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <section className=\"p-5 mb-3 bg-danger\">\r\n      <div className=\"container\">\r\n        <h2 className=\"text-white text-center mb-3\">{ props.title }</h2>\r\n        <p className=\"lead text-center text-light\">{ props.lead }</p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst SectionTitle = (props) => {\r\n  return (\r\n    <h3 className=\"pb-3 mb-3\" style={{\r\n      borderBottom: \"1px solid #dc3545\"\r\n    }}>\r\n      { props.text }\r\n    </h3>\r\n  )\r\n}\r\n\r\nexport default SectionTitle;","import React from 'react';\r\n\r\nconst SelectMoodBtn = (props) => {\r\n  return (\r\n    <div className=\"p-2 col-sm-6 col-md-4\">\r\n      <button\r\n        className=\"btn bg-danger text-light\"\r\n        style={{\r\n          display: 'block',\r\n          position: 'relative',\r\n          width: '80%',\r\n          marginLeft: '10%'\r\n        }}\r\n        onClick={props.clickHandle}\r\n      >\r\n        { props.text }\r\n        <span\r\n          className=\"text-light\" \r\n          style={{\r\n            position: 'absolute',\r\n            right: '10%',\r\n            opacity: props.isSelected ? 1 : 0\r\n          }}\r\n        >√</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectMoodBtn;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { initMood, selectMoodBtnClicked, addMoodBtn, submitMoodContent } from '../actions';\r\n\r\nimport Header from '../../components/Header';\r\nimport SectionTitle from '../../components/SectionTitle';\r\n\r\nimport SelectMoodBtn from './SelectMoodBtn';\r\nimport SendRequestBtn from '../../components/SendRequestBtn';\r\n\r\nimport { getSendRequestBtnStatus } from '../../utils/otherUtil';\r\n\r\nclass Now extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.initMood(this.props.defaultMoodNames);\r\n  }\r\n\r\n  getCustomizeMoodNameAndAddMoodBtn = () => {\r\n    const customizeMood = this.refs.customizeMood;\r\n    const customizeMoodName = customizeMood.value;\r\n    if(!customizeMoodName.trim() || this.props.moodNames.indexOf(customizeMoodName) > -1) {\r\n      return;\r\n    }\r\n\r\n    this.props.addMoodBtn(customizeMoodName);\r\n\r\n    customizeMood.value = '';\r\n  }\r\n\r\n  getMoodDescriptionAndSubmitMoodContent = () => {\r\n    const moodDescription = this.refs.moodDescription;\r\n    const selectMoods = this.props.moodNames.filter((name, index) => {\r\n      return this.props.moodSelections[index]\r\n    });\r\n\r\n    if(selectMoods.length === 0) {\r\n      return;\r\n    }\r\n    \r\n    this.props.submitMoodContent(this.props.username, selectMoods, moodDescription);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header\r\n          title=\"现在\"\r\n          lead=\"用一点点时间，记录一下你的心情吧。\"\r\n        />\r\n\r\n        <div>\r\n          <div className=\"container py-5 px-4\">\r\n            <SectionTitle text=\"今天的心情\" />\r\n\r\n            <p className=\"mt-5\">点击下方按钮进行选择（可多选）</p>\r\n            <div className=\"row\">\r\n              {\r\n                this.props.moodNames &&\r\n                this.props.moodNames.map((moodName, index) => \r\n                  <SelectMoodBtn\r\n                    key={index} \r\n                    text={moodName}\r\n                    isSelected={this.props.moodSelections[index]}\r\n                    clickHandle={this.props.selectMoodBtnClicked.bind(this, index)} \r\n                  />\r\n                )\r\n              }\r\n            </div>\r\n\r\n            <p className=\"mt-5\">添加自定义心情</p>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6 pb-2\">\r\n                <input \r\n                  className=\"pl-2 form-control\"\r\n                  type=\"text\" \r\n                  ref=\"customizeMood\" \r\n                  placeholder=\"你的心情\"\r\n                  style={{\r\n                    display: 'inline-block',\r\n                    width: '80%',\r\n                    marginLeft: '10%'\r\n                  }} \r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6 pb-2\">\r\n                <button \r\n                  className=\"add-mood-btn btn bg-danger text-light\"\r\n                  style={{\r\n                    display: 'inline-block',\r\n                    width: '40%',\r\n                    marginLeft: '30%'\r\n                  }}\r\n                  onClick={this.getCustomizeMoodNameAndAddMoodBtn.bind(this)}\r\n                >添加</button>\r\n              </div>\r\n            </div>\r\n\r\n            <p className=\"mt-5\">还可以用文字描述一下（可选）</p>\r\n            <textarea \r\n              className=\"form-control\" \r\n              rows=\"4\" \r\n              ref=\"moodDescription\"\r\n              placeholder=\"写一下吧\"\r\n            ></textarea>\r\n\r\n            <center>\r\n              <SendRequestBtn \r\n                className=\"btn bg-danger text-light mb-5 px-5\"\r\n                clickHandle={this.getMoodDescriptionAndSubmitMoodContent.bind(this)}\r\n                status={getSendRequestBtnStatus(this.props.submitMoodContentStatus)}\r\n                text=\"提交\"\r\n                successText=\"提交成功！\"\r\n                failureText=\"提交失败，请重试！\"\r\n              />\r\n            </center>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.userInfo.username,\r\n    defaultMoodNames: state.nowMoodContent.moodNames || state.userInfo.defaultMoodNames,\r\n    moodNames: state.nowMoodContent.moodNames,\r\n    moodSelections: state.nowMoodContent.moodSelections,\r\n    submitMoodContentStatus: state.nowMoodContent.submitMoodContentStatus\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  initMood,\r\n  selectMoodBtnClicked,\r\n  addMoodBtn,\r\n  submitMoodContent\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Now);","const initialMoodContent = {\r\n  usedMoodNames: []\r\n};\r\n\r\nexport default initialMoodContent;","import {\n    GET_USER_RECORD_FETCH_STARTED,\n    GET_USER_RECORD_FETCH_SUCCESS,\n    GET_USER_RECORD_FETCH_FAILURE\n  } from './actionTypes';\n  \n  import axios from 'axios';\n  \n  export const getUserRecord = (username) => {\n    return (dispatch) => {\n      const getUserRecordUrl = `/api/users/${username}/record`;\n  \n      dispatch(getUserRecordFetchStarted());\n  \n      axios.get(getUserRecordUrl, {\n        \"headers\": {\n          'Authorization': 'jwt ' + localStorage.getItem('token')\n        }\n      })\n      .then(res => {\n        dispatch(getUserRecordFetchSuccess(res));\n      })\n      .catch(err => {\n        dispatch(getUserRecordFetchFailure(err));\n      });\n    }\n  }\n  \n  export const getUserRecordFetchStarted = () => ({\n    type: GET_USER_RECORD_FETCH_STARTED\n  });\n  \n  export const getUserRecordFetchSuccess = (result) => ({\n    type: GET_USER_RECORD_FETCH_SUCCESS,\n    result\n  });\n  \n  export const getUserRecordFetchFailure = (error) => ({\n    type: GET_USER_RECORD_FETCH_FAILURE,\n    error\n  });\n  ","export const GET_USER_RECORD = 'past/userRecord/get_user_record';\nexport const GET_USER_RECORD_FETCH_STARTED = 'past/userRecord/get_user_record_fetch_started';\nexport const GET_USER_RECORD_FETCH_SUCCESS = 'past/userRecord/get_user_record_fetch_success';\nexport const GET_USER_RECORD_FETCH_FAILURE = 'past/userRecord/get_user_record_fetch_failure';","import React from 'react';\n\nimport './userRecordItem.css';\n\nconst UserRecordItem = (props) => {\n  return (\n    <div className=\"col-lg-3 col-md-6 my-2\" style={{\n      width: '100%',\n      height: '160px',\n      overflow: 'hidden'\n    }}>\n      <div className={`${props.dir} slide rounded bg-danger text-white`} style={{\n        animation: `slide 0.5s ${props.delay}s forwards`\n      }}>\n        <h4 className=\"p-4\" style={{\n          width: '100%',\n          height: '90px',\n          textAlign: 'left'\n        }}>\n          { props.title }\n        </h4>\n        <div className=\"pr-4 lead\" style={{\n          width: '100%',\n          height: '70px',\n          textAlign: 'right'\n        }}>\n          { props.text }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserRecordItem;","import React from 'react';\r\n\r\nconst BlockLoadingSpinner = (props) => {\r\n  return (\r\n    <div className=\"py-4\" style={{ textAlign: 'center', width: '100%' }}>\r\n      <span className=\"spinner-border spinner-border-bg text-danger\" role=\"status\" aria-hidden=\"true\"></span>\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlockLoadingSpinner;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { getUserRecord } from '../actions';\n\nimport UserRecordItem from './UserRecordItem';\nimport BlockLoadingSpinner from '../../../components/BlockLoadingSpinner';\nimport SectionTitle from '../../../components/SectionTitle';\n\nclass UserRecord extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.titles = ['你来到这已经', '你已经写下了', '你的心情有', '你最多的心情是'];\n\n    const today = new Date();\n    const registerDate = props.registerDate;\n    this.useDays = Math.round(\n      (today - new Date(registerDate.year, registerDate.month - 1, registerDate.day)) / 86400000\n    );\n  }\n\n  componentDidMount() {\n    this.props.getUserRecord(this.props.username);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.texts = [\n      `${this.useDays}天`, \n      `${nextProps.totalMoodNum}条心情`, \n      `${nextProps.totalMoodNameNum}种`, \n      nextProps.mostMoodName.join(' ')\n    ];\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <SectionTitle text=\"你的心情足迹\" />\n        <div className=\"row\">\n          {\n            (\n              this.texts &&\n              this.titles.map((title, index) => \n                <UserRecordItem\n                  key={index}\n                  title={title}\n                  text={this.texts[index]}\n                  dir={index % 2 === 0 ? 'slide-up' : 'slide-down'}\n                  delay={0.2 + index * 0.2}\n                />\n              )\n            ) || <BlockLoadingSpinner />\n          }\n        </div>\n        <div className=\"mb-5\"></div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.userInfo.username,\n    registerDate: state.userInfo.registerDate,\n    totalMoodNum: state.userRecord.totalMoodNum,\n    totalMoodNameNum: state.userRecord.totalMoodNameNum,\n    mostMoodName: state.userRecord.mostMoodName\n  }\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getUserRecord\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord);","import {\r\n  TOGGLE_SETTINGS,\r\n  SUBMIT_SETTINGS_FETCH_STARTED,\r\n  SUBMIT_SETTINGS_FETCH_SUCCESS,\r\n  SUBMIT_SETTINGS_FETCH_FAILURE\r\n} from './actionTypes';\r\n\r\nimport axios from 'axios';\r\nimport { getDateRangeText } from '../../utils/otherUtil';\r\n\r\nexport const toggleSettings = () => ({\r\n  type: TOGGLE_SETTINGS\r\n});\r\n\r\nexport const submitSettings = (startDate, endDate, username) => {\r\n  return (dispatch) => {\r\n    const submitSettingsUrl = `/api/users/${username}/moods/data`;\r\n\r\n    dispatch(submitSettingsStarted());\r\n\r\n    axios.get(submitSettingsUrl, {\r\n      \"params\": {\r\n        start: `${startDate.year}/${startDate.month}/${startDate.day}`,\r\n        end: `${endDate.year}/${endDate.month}/${endDate.day}`\r\n      },\r\n      \"headers\": {\r\n        'Authorization': 'jwt ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n    .then(res => {\r\n      dispatch(submitSettingsSuccess(res, getDateRangeText(startDate, endDate)));\r\n    })\r\n    .catch(err => {\r\n      dispatch(submitSettingsFailure(err));\r\n    });\r\n  }\r\n};\r\n\r\nexport const submitSettingsStarted = () => ({\r\n  type: SUBMIT_SETTINGS_FETCH_STARTED\r\n});\r\n\r\nexport const submitSettingsSuccess = (result, moodDateRangeText) => ({\r\n  type: SUBMIT_SETTINGS_FETCH_SUCCESS,\r\n  result,\r\n  moodDateRangeText\r\n});\r\n\r\nexport const submitSettingsFailure = (error) => ({\r\n  type: SUBMIT_SETTINGS_FETCH_FAILURE,\r\n  error\r\n})","export const TOGGLE_SETTINGS = 'past/moodData/toggle_settings';\r\nexport const SUBMIT_SETTINGS = 'past/moodData/submit_settings';\r\nexport const SUBMIT_SETTINGS_FETCH_STARTED = 'past/moodData/submit_settings_fetch_started';\r\nexport const SUBMIT_SETTINGS_FETCH_SUCCESS = 'past/moodData/submit_settings_fetch_success';\r\nexport const SUBMIT_SETTINGS_FETCH_FAILURE = 'past/moodData/submit_settings_fetch_failure';","import React from 'react';\r\n\r\nexport default class DatePicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      date: this.props.defaultDate\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setInputRange();\r\n  }\r\n\r\n  isLeapYear = (year) => {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n  }\r\n\r\n  computeDayNum = (year, month) => {\r\n    if(month === 2) {\r\n      return this.isLeapYear(year) ? 29 : 28;\r\n    }\r\n\r\n    const day30 = [4, 6, 9, 11];\r\n    return day30.indexOf(month) !== -1 ? 30 : 31;\r\n  }\r\n\r\n  isCurMonth = (now) => {\r\n    return now.getFullYear() === this.state.date.year && \r\n           now.getMonth() + 1 === this.state.date.month;\r\n  }\r\n\r\n  setInputRange = () => {\r\n    const { yearInput, monthInput, dayInput } = this.refs;\r\n    const now = new Date();\r\n    const maxDay = this.computeDayNum(this.state.date.year, this.state.date.month);\r\n\r\n    yearInput.max = now.getFullYear();\r\n    monthInput.max = now.getFullYear() === this.state.date.year ? now.getMonth() + 1 : 12;\r\n    \r\n    if(maxDay < dayInput.value) {\r\n      this.setState({\r\n        date: {...this.state.date, day: maxDay}\r\n      }, () => {\r\n        this.props.dateChanged({ ...this.state.date });\r\n      });\r\n      \r\n    }\r\n    if(this.isCurMonth(now) && dayInput.value > now.getDate()) {\r\n      this.setState({\r\n        date: {...this.state.date, day: now.getDate()}\r\n      }, () => {\r\n        this.props.dateChanged({ ...this.state.date });\r\n      });\r\n    }\r\n\r\n    dayInput.max = this.isCurMonth(now) ? now.getDate() : maxDay;\r\n  }\r\n\r\n  dateChangedHandle = (e, target) => {\r\n    const change = {};\r\n    change[target] = +e.target.value;\r\n\r\n    const newDate = {...this.state.date, ...change};\r\n\r\n    this.setState({\r\n      date: newDate\r\n    }, () => {\r\n      this.props.dateChanged(newDate);\r\n      this.setInputRange();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      border: '1px solid #dc3545',\r\n      borderRadius: '.25rem'\r\n    };\r\n\r\n    const { year, month, day } = this.state.date;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row p-1\" style={style}>\r\n          <div className=\"col-4\">\r\n            <label>{ year + '年' }</label>\r\n            <input \r\n              type=\"range\" \r\n              className=\"custom-range\"\r\n              ref=\"yearInput\"\r\n              value={year}\r\n              min={2019}\r\n              onChange={(e) => this.dateChangedHandle(e, 'year')}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label>{ month + '月' }</label>\r\n            <input \r\n              type=\"range\" \r\n              className=\"custom-range\"\r\n              ref=\"monthInput\"\r\n              value={month}\r\n              min={1}\r\n              onChange={(e) => this.dateChangedHandle(e, 'month')}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label>{ day + '日' }</label>\r\n            <input \r\n              type=\"range\" \r\n              className=\"custom-range\"\r\n              ref=\"dayInput\"\r\n              value={day}\r\n              min={1}\r\n              onChange={(e) => this.dateChangedHandle(e, 'day')}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport DatePicker from './DatePicker';\r\n\r\nexport default class DateRangePicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dateRange: {\r\n        startDate: this.props.defaultStartDate,\r\n        endDate: this.props.defaultEndDate\r\n      }\r\n    };\r\n  }\r\n\r\n  setStartDate = (startDate) => {\r\n    this.setState({\r\n      dateRange: {\r\n        ...this.state.dateRange,\r\n        startDate\r\n      }\r\n    });\r\n  }\r\n\r\n  setEndDate = (endDate) => {\r\n    this.setState({\r\n      dateRange: {\r\n        ...this.state.dateRange,\r\n        endDate\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6 pt-2\">\r\n          <label>开始日期</label>\r\n          <DatePicker \r\n            ref=\"startDate\" \r\n            dateChanged={this.setStartDate.bind(this)} \r\n            defaultDate={this.props.defaultStartDate}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-6 pt-2\">\r\n          <label>截止日期</label>\r\n          <DatePicker \r\n            ref=\"endDate\" \r\n            dateChanged={this.setEndDate.bind(this)} \r\n            defaultDate={this.props.defaultEndDate}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/pie';\r\n\r\nexport default class PieChart extends React.Component {\r\n  pie = null;\r\n\r\n  componentDidMount() {\r\n    this.pie = echarts.init(document.getElementById(this.props.id));\r\n    this.pie.showLoading();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.isLoading) {\r\n      this.pie.showLoading();\r\n    } else {\r\n      this.pie.hideLoading();\r\n    }\r\n\r\n    this.setOption(nextProps.data);\r\n  }\r\n\r\n  setOption = (data) => {\r\n    this.pie.setOption({\r\n      series: [{\r\n        name: '心情比例',\r\n        type: 'pie',\r\n        radius: '50%',\r\n        data,\r\n        roseType: 'radius',\r\n        itemStyle: {\r\n          normal: {\r\n            label: {\r\n              show: true,\r\n              formatter: '{b} {c}次\\n{d}%'\r\n            }\r\n          }\r\n        }\r\n      }]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        id={this.props.id} \r\n        style={{width: '100%', height: this.props.height}}\r\n      ></div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { toggleSettings, submitSettings } from '../actions';\r\n\r\nimport SectionTitle from '../../../components/SectionTitle';\r\nimport DateRangePicker from '../../../components/DateRangePicker';\r\nimport PieChart from '../../../components/PieChart';\r\nimport SendRequestBtn from '../../../components/SendRequestBtn';\r\n\r\nimport { fetchStatus, getSendRequestBtnStatus } from '../../../utils/otherUtil';\r\n\r\nclass MoodData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const today = new Date();\r\n\r\n    this.defaultStartDate = this.props.registerDate;\r\n    this.defaultEndDate = {\r\n      year: today.getFullYear(),\r\n      month: today.getMonth() + 1,\r\n      day: today.getDate()\r\n    };\r\n  }\r\n\r\n  submitSettingsHandle = () => {\r\n    const { startDate, endDate } = this.refs.dateRange.state.dateRange;\r\n    this.props.submitSettings(startDate, endDate, this.props.username);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.submitSettingsHandle();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <SectionTitle text=\"你的心情总览\" />\r\n\r\n        <center>\r\n          <a\r\n            href=\"#pastMoodData\"\r\n            className=\"btn btn-sm bg-danger text-light px-5 mb-3\"\r\n            data-toggle=\"collapse\"\r\n            onClick={this.props.toggleSettings}\r\n          >\r\n            { this.props.toggleBtnText }\r\n          </a>\r\n        </center>\r\n\r\n        <div id=\"pastMoodData\" className=\"collapse\">\r\n          <DateRangePicker \r\n            ref=\"dateRange\"\r\n            defaultStartDate={this.defaultStartDate}\r\n            defaultEndDate={this.defaultEndDate} \r\n          />\r\n\r\n          <center>\r\n            <SendRequestBtn\r\n              className=\"btn btn-sm bg-danger text-light px-5\"\r\n              clickHandle={this.submitSettingsHandle.bind(this)}\r\n              status={getSendRequestBtnStatus(this.props.submitSettingsStatus)}\r\n              text=\"提交\"\r\n              successText=\"提交成功！\"\r\n              failureText=\"提交失败，请重试！\"\r\n            />\r\n          </center>\r\n        </div>\r\n\r\n        <div className=\"mt-2 mb-1\">{ this.props.moodDateRangeText }</div>\r\n\r\n        {\r\n          (\r\n            this.props.submitSettingsStatus === fetchStatus.SUCCESS && !this.props.moodNum.length &&\r\n            <div className=\"text-danger\" style={{\r\n              height: '400px',\r\n              lineHeight: '400px',\r\n              textAlign: 'center'\r\n            }}>此时间段内无心情数据</div>\r\n          )\r\n          ||\r\n          <PieChart\r\n            id=\"past-mood-proportion-pie\"\r\n            height=\"400px\"\r\n            data={this.props.moodNum}\r\n            isLoading={this.props.submitSettingsStatus === fetchStatus.LOADING}\r\n          />\r\n        }\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    toggleBtnText: state.moodData.toggleBtnText,\r\n    moodNum: state.moodData.moodNum,\r\n    registerDate: state.userInfo.registerDate,\r\n    submitSettingsStatus: state.moodData.submitSettingsStatus,\r\n    username: state.userInfo.username,\r\n    moodDateRangeText: state.moodData.moodDateRangeText\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  toggleSettings,\r\n  submitSettings\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoodData);","import {\r\n  INIT_MOOD_SELECTIONS,\r\n  TOGGLE_SETTINGS,\r\n  SUBMIT_SETTINGS_FETCH_STARTED,\r\n  SUBMIT_SETTINGS_FETCH_SUCCESS,\r\n  SUBMIT_SETTINGS_FETCH_FAILURE,\r\n  CHANGE_MOOD_SELECTIONS\r\n} from './actionTypes';\r\n\r\nimport axios from 'axios';\r\nimport { getDateRangeText } from '../../utils/otherUtil';\r\n\r\nexport const initMoodSelections = (moodNames) => ({\r\n  type: INIT_MOOD_SELECTIONS,\r\n  moodNames\r\n});\r\n\r\nexport const toggleSettings = () => ({\r\n  type: TOGGLE_SETTINGS\r\n});\r\n\r\nexport const submitSettings = (startDate, endDate, selectedMoods, username) => {\r\n  return (dispatch) => {\r\n    const submitSettingsUrl = `/api/users/${username}/moods`;\r\n\r\n    dispatch(submitSettingsStarted());\r\n\r\n    axios.get(submitSettingsUrl, {\r\n      'params': {\r\n        start: `${startDate.year}/${startDate.month}/${startDate.day}`,\r\n        end: `${endDate.year}/${endDate.month}/${endDate.day}`,\r\n        selectedmoods: selectedMoods.join('/')\r\n      },\r\n      \"headers\": {\r\n        'Authorization': 'jwt ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n    .then(res => {\r\n      dispatch(submitSettingsSuccess(res, getDateRangeText(startDate, endDate)));\r\n    })\r\n    .catch(err => {\r\n      dispatch(submitSettingsFailure(err));\r\n    });\r\n  }\r\n};\r\n\r\nexport const submitSettingsStarted = () => ({\r\n  type: SUBMIT_SETTINGS_FETCH_STARTED\r\n});\r\n\r\nexport const submitSettingsSuccess = (result, moodDateRangeText) => ({\r\n  type: SUBMIT_SETTINGS_FETCH_SUCCESS,\r\n  result,\r\n  moodDateRangeText\r\n});\r\n\r\nexport const submitSettingsFailure = (error) => ({\r\n  type: SUBMIT_SETTINGS_FETCH_FAILURE,\r\n  error\r\n});\r\n\r\nexport const changeMoodSelections = (index) => ({\r\n  type: CHANGE_MOOD_SELECTIONS,\r\n  index\r\n});","export const INIT_MOOD_SELECTIONS = 'past/moodCard/init_mood_selections';\r\nexport const TOGGLE_SETTINGS = 'past/moodCard/toggle_settings';\r\nexport const SUBMIT_SETTINGS = 'past/moodCard/submit_settings';\r\nexport const SUBMIT_SETTINGS_FETCH_STARTED = 'past/moodCard/submit_settings_fetch_started';\r\nexport const SUBMIT_SETTINGS_FETCH_SUCCESS = 'past/moodCard/submit_settings_fetch_success';\r\nexport const SUBMIT_SETTINGS_FETCH_FAILURE = 'past/moodCard/submit_settings_fetch_failure';\r\nexport const CHANGE_MOOD_SELECTIONS = 'past/moodCard/change_mood_selections';","import React from 'react';\r\nimport './card.css';\r\n\r\nclass Card extends React.Component {\r\n  addAnimation = () => {\r\n    const rect = this.card.getBoundingClientRect();\r\n    if(rect.top > this.windowHeight + this.card.style.height) {\r\n      if(this.card.classList.contains('card-appear')) {\r\n        this.card.classList.remove('card-appear');\r\n      }\r\n    } else {\r\n      if(!this.card.classList.contains('card-appear')) {\r\n        this.card.classList.add('card-appear');\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.card = document.getElementsByClassName('card')[this.props.index];\r\n    this.windowHeight = window.innerHeight;\r\n\r\n    window.addEventListener('scroll', this.addAnimation);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.addAnimation);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-6 my-3\">\r\n        <div style={{\r\n          position: 'relative',\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}>\r\n          <div className=\"card bg-danger text-white\" style={{\r\n            opacity: 0,\r\n            transform: 'translate3d(0, 30px, 0)',\r\n            width: '100%'\r\n          }}>\r\n            <div className=\"card-header\">\r\n              {\r\n                this.props.mood.map((item, index) => \r\n                  <h5 key={index} className=\"mr-2\" style={{\r\n                    marginBottom: '0px', display: 'inline-block'\r\n                  }}>{ item }</h5>\r\n                )\r\n              }\r\n            </div>\r\n            {\r\n              this.props.moodDescription === '' ? <div></div> :\r\n              <div className=\"card-body\">{ this.props.moodDescription }</div>\r\n            }\r\n            <div className=\"card-footer text-right\">\r\n              { this.props.date.substring(0, 10) }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst NullContent = (props) => {\r\n  return (\r\n    <div className=\"py-4 text-center text-danger lead\" style={{\r\n      width: '100%'\r\n    }}>\r\n      { props.text }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NullContent;","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { initMoodSelections, toggleSettings, submitSettings, changeMoodSelections } from '../actions';\r\n\r\nimport SectionTitle from '../../../components/SectionTitle';\r\nimport Card from './Card';\r\nimport DateRangePicker from '../../../components/DateRangePicker';\r\nimport SendRequestBtn from '../../../components/SendRequestBtn';\r\nimport NullContent from '../../../components/NullContent';\r\nimport BlockLoadingSpinner from '../../../components/BlockLoadingSpinner';\r\n\r\nimport { fetchStatus, getSendRequestBtnStatus } from '../../../utils/otherUtil';\r\n\r\nclass MoodCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.initMoodSelections(this.props.moodNames);\r\n  }\r\n\r\n  getDefaultDate = () => {\r\n    const date1 = new Date();\r\n    const today = {\r\n      year: date1.getFullYear(),\r\n      month: date1.getMonth() + 1,\r\n      day: date1.getDate()\r\n    };\r\n\r\n    const date2 = new Date(date1);\r\n    date2.setDate(date1.getDate() - 5);\r\n    const fiveDaysAgo = {\r\n      year: date2.getFullYear(),\r\n      month: date2.getMonth() + 1,\r\n      day: date2.getDate()\r\n    };\r\n\r\n    return {fiveDaysAgo, today};\r\n  }\r\n\r\n  confirmFilter = () => {\r\n    const { startDate, endDate } = this.refs.dateRange.state.dateRange;\r\n\r\n    if(this.props.moodSelections === undefined) {\r\n      return;\r\n    }\r\n\r\n    const selectedMoods = this.props.moodNames.filter((selection, index) => {\r\n      return this.props.moodSelections[index]\r\n    });\r\n\r\n    this.props.submitSettings(startDate, endDate, selectedMoods, this.props.username);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { startDate, endDate } = this.refs.dateRange.state.dateRange;\r\n\r\n    const selectedMoods = this.props.moodNames;\r\n    this.props.submitSettings(startDate, endDate, selectedMoods, this.props.username);\r\n  }\r\n\r\n  render() {\r\n    const { fiveDaysAgo, today } = this.getDefaultDate();\r\n    return (\r\n      <React.Fragment>\r\n        <SectionTitle text=\"你的心情卡片\" />\r\n\r\n        <center>\r\n          <a\r\n            href=\"#pastMoodCardFilter\"\r\n            className=\"btn btn-sm bg-danger text-light px-5 mb-3\"\r\n            data-toggle=\"collapse\"\r\n            onClick={this.props.toggleSettings}\r\n          >\r\n            { this.props.toggleBtnText }\r\n          </a>\r\n        </center>\r\n\r\n        <div id=\"pastMoodCardFilter\" className=\"collapse\">\r\n          <DateRangePicker \r\n            ref=\"dateRange\"\r\n            defaultStartDate={fiveDaysAgo}\r\n            defaultEndDate={today} \r\n          />\r\n\r\n          <p className=\"my-2\">选择心情</p>\r\n          \r\n              {\r\n                (\r\n                  this.props.moodNames && this.props.moodNames.length !== 0 &&\r\n                  <div className=\"custom-control custom-checkbox mt-3\">\r\n                    <div className=\"row\">\r\n                    {\r\n                      this.props.moodNames.map((name, index) =>\r\n                        <div className=\"col-sm-4 col-6\" key={index}>\r\n                          <div style={{ marginLeft: '40%' }}>\r\n                            <input \r\n                              type=\"checkbox\"\r\n                              defaultChecked \r\n                              className=\"custom-control-input\" \r\n                              id={'mood-filter-' + index}\r\n                              onClick={this.props.changeMoodSelections.bind(this, index)}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor={'mood-filter-' + index}>\r\n                              {name}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    }\r\n                    </div>\r\n                  </div>\r\n                ) || <NullContent text=\"没有选择过的心情\" />\r\n              }\r\n              \r\n            \r\n\r\n          <center>\r\n            <SendRequestBtn\r\n              className=\"btn btn-sm bg-danger text-light px-5 mb-3\"\r\n              clickHandle={this.confirmFilter.bind(this)}\r\n              status={getSendRequestBtnStatus(this.props.submitSettingsStatus)}\r\n              text=\"提交\"\r\n              successText=\"提交成功！\"\r\n              failureText=\"提交失败，请重试！\"\r\n            />\r\n          </center>\r\n        </div>\r\n\r\n        <div className=\"mt-2 mb-1\">{ this.props.moodDateRangeText }</div>\r\n        \r\n        <div className=\"row\">\r\n          {\r\n            (\r\n              this.props.moods && this.props.moods.length &&\r\n              this.props.moods.map((item, index) =>\r\n                <Card\r\n                  key={index}\r\n                  index={index}\r\n                  mood={item.moodNames}\r\n                  moodDescription={item.moodDescription}\r\n                  date={item.date}\r\n                />\r\n              )\r\n            ) || \r\n            (\r\n              this.props.submitSettingsStatus === fetchStatus.LOADING \r\n              ? <BlockLoadingSpinner />\r\n              : <NullContent text=\"没找到符合条件的心情\" />\r\n            )\r\n          }\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    moodDateRangeText: state.moodCard.moodDateRangeText,\r\n    toggleBtnText: state.moodCard.toggleBtnText,\r\n    moodNames: [...new Set([...state.userInfo.usedMoodNames, ...state.nowMoodContent.usedMoodNames])],\r\n    moodSelections: state.moodCard.moodSelections,\r\n    moods: state.moodCard.moods,\r\n    username: state.userInfo.username,\r\n    submitSettingsStatus: state.moodCard.submitSettingsStatus\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  initMoodSelections,\r\n  toggleSettings,\r\n  submitSettings,\r\n  changeMoodSelections\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoodCard);","import React from 'react';\r\n\r\nimport Header from '../../components/Header';\r\nimport { view as UserRecord } from '../userRecord';\r\nimport { view as MoodData } from '../moodData';\r\nimport { view as MoodCard } from '../moodCard';\r\n\r\nexport default class Past extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header\r\n          title=\"过去\"\r\n          lead=\"回到过去，你写下过的喜怒哀乐，尽收眼底。\"\r\n        />\r\n\r\n        <div>\r\n          <div className=\"container py-5 px-4\">\r\n            <UserRecord />\r\n            <MoodData />\r\n            <MoodCard />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport Header from '../../components/Header';\r\n\r\nexport default class Future extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header\r\n          title=\"未来\"\r\n          lead=\"心情……无法预测，即使是最亲近的人。\"\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { actions as authActions } from './auth';\n\nimport { view as Auth } from './auth';\nimport { view as Now } from './now';\nimport { view as Past } from './past';\nimport { view as Future } from './future';\n\nconst { PrivateRoute, Login } = Auth;\nconst { authByJWT } = authActions;\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    if(this.props.location.pathname === '/') {\n      this.props.history.push('/now');\n    }\n\n    if(this.props.location.pathname !== '/login') {\n      this.props.authByJWT();\n    }\n  }\n\n  render() {\n    return (\n        <React.Fragment>\n          <Switch>\n            <PrivateRoute exact path=\"/past\" component={Past} />\n            <PrivateRoute exact path=\"/now\" component={Now} />\n            <PrivateRoute exact path=\"/future\" component={Future} />\n\n            <Route exact path=\"/login\" component={Login} />\n          </Switch>\n        </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  authByJWT\n}, dispatch);\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { reducer as authReducer, defaultState as initialUserInfo } from './auth';\r\nimport { reducer as nowReducer, defaultState as initialMoodContent } from './now';\r\nimport { reducer as moodDataReducer, defaultState as initialMoodData } from './past/moodData';\r\nimport { reducer as moodCardReducer, defaultState as initialMoodCard } from './past/moodCard';\r\nimport { reducer as userRecordReducer } from './past/userRecord';\r\n\r\nconst reducer = combineReducers({\r\n  userInfo: authReducer,\r\n  nowMoodContent: nowReducer,\r\n  moodData: moodDataReducer,\r\n  moodCard: moodCardReducer,\r\n  userRecord: userRecordReducer\r\n});\r\n\r\nconst initialState = {\r\n  userInfo: initialUserInfo,\r\n  nowMoodContent: initialMoodContent,\r\n  moodData: initialMoodData,\r\n  moodCard: initialMoodCard\r\n};\r\n\r\nconst middlewares = [thunkMiddleware];\r\nconst storeEnhancers = compose(\r\n  applyMiddleware(...middlewares),\r\n  (window && window.__REDUX_DEVTOOLS_EXTENSION__)\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  : f => f\r\n);\r\n\r\nexport default createStore(reducer, initialState, storeEnhancers);","import {\r\n  AUTH_BY_JWT_FETCH_STARTED,\r\n  AUTH_BY_JWT_FETCH_SUCCESS,\r\n  AUTH_BY_JWT_FETCH_FAILURE,\r\n  AUTH_BY_USERINFO_FETCH_STARTED,\r\n  AUTH_BY_USERINFO_FETCH_SUCCESS,\r\n  AUTH_BY_USERINFO_FETCH_FAILURE,\r\n  TOGGLE_AUTH_MODE,\r\n  SUBMIT_REGISTER_USERINFO_FETCH_STARTED,\r\n  SUBMIT_REGISTER_USERINFO_FETCH_SUCCESS,\r\n  SUBMIT_REGISTER_USERINFO_FETCH_FAILURE,\r\n  USERNAME_EXISTED_FAILURE\r\n} from './actionTypes';\r\nimport { authMode } from './constants';\r\n\r\nimport { fetchStatus } from '../utils/otherUtil';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case AUTH_BY_JWT_FETCH_STARTED: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.LOADING\r\n      };\r\n    }\r\n\r\n    case AUTH_BY_JWT_FETCH_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.SUCCESS,\r\n        username: action.result.data.username,\r\n        registerDate: action.result.data.registerDate,\r\n        defaultMoodNames: action.result.data.defaultMoodNames,\r\n        usedMoodNames: action.result.data.usedMoodNames\r\n      };\r\n    }\r\n\r\n    case AUTH_BY_JWT_FETCH_FAILURE: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.FAILURE\r\n      };\r\n    }\r\n\r\n\r\n    case AUTH_BY_USERINFO_FETCH_STARTED: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.LOADING\r\n      };\r\n    }\r\n\r\n    case AUTH_BY_USERINFO_FETCH_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.SUCCESS,\r\n        username: action.result.data.username,\r\n        registerDate: action.result.data.registerDate,\r\n        defaultMoodNames: action.result.data.defaultMoodNames,\r\n        usedMoodNames: action.result.data.usedMoodNames\r\n      }\r\n    }\r\n\r\n    case AUTH_BY_USERINFO_FETCH_FAILURE: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.FAILURE\r\n      }\r\n    }\r\n\r\n    case TOGGLE_AUTH_MODE: {\r\n      return {\r\n        ...state,\r\n        authMode: state.authMode === authMode.REGISTER ? authMode.LOGIN : authMode.REGISTER\r\n      };\r\n    }\r\n\r\n    case SUBMIT_REGISTER_USERINFO_FETCH_STARTED: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.LOADING\r\n      };\r\n    }\r\n\r\n    case SUBMIT_REGISTER_USERINFO_FETCH_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.SUCCESS,\r\n        username: action.result.data.username,\r\n        registerDate: action.result.data.registerDate,\r\n        defaultMoodNames: action.result.data.defaultMoodNames,\r\n        usedMoodNames: action.result.data.usedMoodNames\r\n      };\r\n    }\r\n\r\n    case SUBMIT_REGISTER_USERINFO_FETCH_FAILURE: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.FAILURE\r\n      };\r\n    }\r\n\r\n    case USERNAME_EXISTED_FAILURE: {\r\n      return {\r\n        ...state,\r\n        authStatus: fetchStatus.CONFLICT_FAILURE\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}","import {\r\n  INIT_MOOD_SELECTIONS,\r\n  SELECT_MOOD_BTN_CLICKED,\r\n  ADD_MOOD_BTN,\r\n  SUBMIT_MOOD_CONTENT_FETCH_STARTED,\r\n  SUBMIT_MOOD_CONTENT_FETCH_SUCCESS,\r\n  SUBMIT_MOOD_CONTENT_FETCH_FAILURE\r\n} from './actionTypes';\r\n\r\nimport { fetchStatus } from '../utils/otherUtil';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case INIT_MOOD_SELECTIONS: {\r\n      return {\r\n        ...state,\r\n        moodNames: action.defaultMoodNames,\r\n        moodSelections: action.defaultMoodNames.map(item => false)\r\n      };\r\n    }\r\n\r\n    case SELECT_MOOD_BTN_CLICKED: {\r\n      return {\r\n        ...state,\r\n        moodSelections: state.moodSelections.map((moodSelection, btnIndex) => \r\n          btnIndex === action.btnIndex\r\n            ? !moodSelection\r\n            : moodSelection\r\n        )\r\n      };\r\n    }\r\n\r\n    case ADD_MOOD_BTN: {\r\n      return {\r\n        ...state,\r\n        moodNames: [...state.moodNames, action.moodName],\r\n        moodSelections: [...state.moodSelections, true]\r\n      };\r\n    }\r\n\r\n    case SUBMIT_MOOD_CONTENT_FETCH_STARTED: {\r\n      return {\r\n        ...state,\r\n        submitMoodContentStatus: fetchStatus.LOADING\r\n      };\r\n    }\r\n\r\n    case SUBMIT_MOOD_CONTENT_FETCH_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        moodSelections: state.moodSelections.map(item => false),\r\n        submitMoodContentStatus: fetchStatus.SUCCESS,\r\n        usedMoodNames: [...action.selectMoods]\r\n      }\r\n    }\r\n\r\n    case SUBMIT_MOOD_CONTENT_FETCH_FAILURE: {\r\n      return {\r\n        ...state,\r\n        submitMoodContentStatus: fetchStatus.FAILURE\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n} ","import {\r\n  TOGGLE_SETTINGS,\r\n  SUBMIT_SETTINGS_FETCH_STARTED,\r\n  SUBMIT_SETTINGS_FETCH_SUCCESS,\r\n  SUBMIT_SETTINGS_FETCH_FAILURE\r\n} from './actionTypes';\r\n\r\nimport { fetchStatus } from '../../utils/otherUtil';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_SETTINGS: {\r\n      return {\r\n        ...state,\r\n        toggleBtnText: state.toggleBtnText === '展开选项' ? '收起选项' : '展开选项'\r\n      };\r\n    }\r\n\r\n    case SUBMIT_SETTINGS_FETCH_STARTED: {\r\n      return {\r\n        ...state,\r\n        submitSettingsStatus: fetchStatus.LOADING\r\n      };\r\n    }\r\n\r\n    case SUBMIT_SETTINGS_FETCH_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        moodNum: action.result.data,\r\n        submitSettingsStatus: fetchStatus.SUCCESS,\r\n        moodDateRangeText: action.moodDateRangeText\r\n      };\r\n    }\r\n\r\n    case SUBMIT_SETTINGS_FETCH_FAILURE: {\r\n      return {\r\n        ...state,\r\n        submitSettingsStatus: fetchStatus.FAILURE\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}","import {\r\n  INIT_MOOD_SELECTIONS,\r\n  TOGGLE_SETTINGS,\r\n  SUBMIT_SETTINGS_FETCH_STARTED,\r\n  SUBMIT_SETTINGS_FETCH_SUCCESS,\r\n  SUBMIT_SETTINGS_FETCH_FAILURE,\r\n  CHANGE_MOOD_SELECTIONS\r\n} from './actionTypes';\r\n\r\nimport { fetchStatus } from '../../utils/otherUtil';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case INIT_MOOD_SELECTIONS: {\r\n      return {\r\n        ...state,\r\n        moodSelections: action.moodNames.map(item => true)\r\n      };\r\n    }\r\n\r\n    case TOGGLE_SETTINGS: {\r\n      return {\r\n        ...state,\r\n        toggleBtnText: state.toggleBtnText === '展开选项' ? '收起选项' : '展开选项'\r\n      };\r\n    }\r\n\r\n    case SUBMIT_SETTINGS_FETCH_STARTED: {\r\n      return {\r\n        ...state,\r\n        submitSettingsStatus: fetchStatus.LOADING\r\n      };\r\n    }\r\n\r\n    case SUBMIT_SETTINGS_FETCH_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        moods: action.result.data,\r\n        submitSettingsStatus: fetchStatus.SUCCESS,\r\n        moodDateRangeText: action.moodDateRangeText\r\n      };\r\n    }\r\n\r\n    case SUBMIT_SETTINGS_FETCH_FAILURE: {\r\n      return {\r\n        ...state,\r\n        submitSettingsStatus: fetchStatus.FAILURE\r\n      };\r\n    }\r\n    \r\n    case CHANGE_MOOD_SELECTIONS: {\r\n      return {\r\n        ...state,\r\n        moodSelections: state.moodSelections.map((selection, index) => \r\n          index === action.index ? !selection : selection\r\n        )\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}","import {\n    GET_USER_RECORD_FETCH_STARTED,\n    GET_USER_RECORD_FETCH_SUCCESS,\n    GET_USER_RECORD_FETCH_FAILURE\n  } from './actionTypes';\n  \n  import { fetchStatus } from '../../utils/otherUtil';\n  \n  export default (state = {}, action) => {\n    switch(action.type) {\n      case GET_USER_RECORD_FETCH_STARTED: {\n        return {\n          ...state,\n          getUserRecordStatus: fetchStatus.LOADING\n        };\n      }\n  \n      case GET_USER_RECORD_FETCH_SUCCESS: {\n        return {\n          ...state,\n          getUserRecordStatus: fetchStatus.SUCCESS,\n          totalMoodNum: action.result.data.totalMoodNum,\n          totalMoodNameNum: action.result.data.totalMoodNameNum,\n          mostMoodName: action.result.data.mostMoodName\n        };\n      }\n  \n      case GET_USER_RECORD_FETCH_FAILURE: {\n        return {\n          ...state,\n          getUserRecordStatus: fetchStatus.FAILURE\n        };\n      }\n  \n      default: {\n        return state;\n      }\n    }\n  }","export default {\r\n  toggleBtnText: '展开选项'\r\n}","export default {\r\n  toggleBtnText: '展开选项'\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}